/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.22
 * Generated at: 2025-06-08 02:29:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import model.Importacion;

public final class buscarImportacion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Importacion");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Importaci√≥n</title>\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <style>\n");
      out.write("        * {\n");
      out.write("            box-sizing: border-box;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        body {\n");
      out.write("            margin: 0;\n");
      out.write("            font-family: 'Segoe UI', sans-serif;\n");
      out.write("            display: flex;\n");
      out.write("            background-color: #f4f4f4;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar {\n");
      out.write("            width: 220px;\n");
      out.write("            background-color: #003366;\n");
      out.write("            color: white;\n");
      out.write("            height: 100vh;\n");
      out.write("            position: fixed;\n");
      out.write("            display: flex;\n");
      out.write("            flex-direction: column;\n");
      out.write("            padding-top: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar h2 {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar a {\n");
      out.write("            padding: 12px 20px;\n");
      out.write("            text-decoration: none;\n");
      out.write("            color: white;\n");
      out.write("            display: block;\n");
      out.write("            transition: background 0.3s;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar a:hover {\n");
      out.write("            background-color: #0059b3;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .main-content {\n");
      out.write("            margin-left: 220px;\n");
      out.write("            padding: 20px;\n");
      out.write("            flex-grow: 1;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .header-importacion {\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .controls {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: flex-start;\n");
      out.write("            margin-top: 10px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .search-container {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .search-input {\n");
      out.write("            padding: 8px;\n");
      out.write("            border: 1px solid #ccc;\n");
      out.write("            border-radius: 5px 0 0 5px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .search-button {\n");
      out.write("            background-color: #007bff;\n");
      out.write("            color: white;\n");
      out.write("            border: none;\n");
      out.write("            padding: 8px 15px;\n");
      out.write("            border-radius: 0 5px 5px 0;\n");
      out.write("            cursor: pointer;\n");
      out.write("            margin-left: -5px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .new-importacion-button {\n");
      out.write("            background-color: #28a745;\n");
      out.write("            color: white;\n");
      out.write("            border: none;\n");
      out.write("            padding: 8px 15px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .importacion-table {\n");
      out.write("            width: 100%;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("            margin-top: 20px;\n");
      out.write("            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n");
      out.write("            border-radius: 5px;\n");
      out.write("            overflow: hidden;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .importacion-table th, .importacion-table td {\n");
      out.write("            border: 1px solid #ddd;\n");
      out.write("            padding: 10px;\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .importacion-table th {\n");
      out.write("            background-color: #f2f2f2;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .importacion-table tbody tr:nth-child(even) {\n");
      out.write("            background-color: #f9f9f9;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .importacion-table .actions {\n");
      out.write("            display: flex;\n");
      out.write("            gap: 10px;\n");
      out.write("            justify-content: center;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .importacion-table .action-icon {\n");
      out.write("            cursor: pointer;\n");
      out.write("            font-size: 16px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"sidebar\">\n");
      out.write("        <h2>MENU</h2>\n");
      out.write("        <a href=\"#\">Roles</a>\n");
      out.write("        <a href=\"#\">Empleados</a>\n");
      out.write("        <a href=\"LisProvee.jsp\">Proveedores</a>\n");
      out.write("        <a href=\"#\">Tipo de Seguimiento</a>\n");
      out.write("        <a href=\"#\">Productos</a>\n");
      out.write("        <a href=\"#\" class=\"active\">Importaciones</a>\n");
      out.write("        <a href=\"#\">Detalle Importaci√≥n</a>\n");
      out.write("        <a href=\"#\">Seguimiento de Plazos</a>\n");
      out.write("        <a href=\"#\">Almacenes</a>\n");
      out.write("        <a href=\"#\">Alertas</a>\n");
      out.write("        <a href=\"#\">Historial de Cambios</a>\n");
      out.write("        <a href=\"#\">Devoluciones</a>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"main-content\">\n");
      out.write("        <div class=\"header-importacion\">\n");
      out.write("            <h1>IMPORTACION</h1>\n");
      out.write("            <div class=\"controls\">\n");
      out.write("                <form action=\"BuscarImporta\" class=\"search-container\">\n");
      out.write("                    <input type=\"hidden\" value=\"2\" name=\"opc\"> \n");
      out.write("                    <input name=\"id\" type=\"text\" class=\"search-input\" placeholder=\"Ingrese c√≥digo de Importaci√≥n\">\n");
      out.write("                    <input type=\"submit\" class=\"search-button\" value=\"Buscar\">\n");
      out.write("                    \n");
      out.write("                </form>\n");
      out.write("                <button class=\"new-importacion-button\">Nueva Importaci√≥n</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("         ");

        List<Importacion> lista = (List<Importacion>) request.getAttribute("importacion");
        if (lista != null) {
            if (lista.isEmpty()) {
    
      out.write("\n");
      out.write("        <div class=\"alert alert-warning\">No se encontraron importaciones para la fecha seleccionada.</div>\n");
      out.write("    ");

            } else {
    
      out.write("\n");
      out.write("        <table class=\"importacion-table\">\n");
      out.write("            \n");
      out.write("            <thead>\n");
      out.write("                <tr>\n");
      out.write("                    <th>Id importacion  </th>\n");
      out.write("                    <th>C√≥digo de Importaci√≥n</th>\n");
      out.write("                    <th>Fecha de Emisi√≥n</th>\n");
      out.write("                    <th>Fecha estimada arribo</th>\n");
      out.write("                    <th>Fecha real arribo</th>\n");
      out.write("                    <th>Estado</th>\n");
      out.write("                    <th>Proveedor</th>\n");
      out.write("                    <th>Responsable</th>\n");
      out.write("                    <th>Acciones</th>\n");
      out.write("                </tr>\n");
      out.write("            </thead>\n");
      out.write("            <tbody>\n");
      out.write("               ");

                for (Importacion imp : lista) {
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td>");
      out.print( imp.getId_importacion() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( imp.getCodigo_importacion() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( imp.getFecha_emision() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( imp.getFecha_estimada_arribo() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( imp.getFecha_real_arribo() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( imp.getEstado() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( imp.getId_proveedor() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( imp.getResponsable() );
      out.write("</td>\n");
      out.write("                <td class=\"actions\">\n");
      out.write("                       <a href=\"detalleImportacion.jsp?id_importacion=");
      out.print( imp.getId_importacion() );
      out.write("\" class=\"action-icon\" title=\"Ver Detalle\">üîç</a>\n");
      out.write("\n");
      out.write("                        <span class=\"action-icon\">‚úèÔ∏è</span>\n");
      out.write("                        <span class=\"action-icon\">üóëÔ∏è</span>\n");
      out.write("                       <a href=\"devolucion.jsp\" title=\"Ir a Devoluciones\">\n");
      out.write("                           <a href=\"registrarSeguimiento.jsp?idImportacion=");
      out.print( imp.getId_importacion() );
      out.write("\" title=\"Nuevo Seguimiento\">üìù</a>\n");
      out.write("\n");
      out.write("                           <a href=\"SeguimientoServlet?accion=listar&idImportacion=");
      out.print( imp.getId_importacion() );
      out.write("\" class=\"action-icon\" title=\"Ver Seguimiento\">üìã</a>\n");
      out.write("\n");
      out.write("    <span class=\"action-icon\">‚Ü©Ô∏è</span>\n");
      out.write("</a>\n");
      out.write("                    </td>\n");
      out.write("            </tr>\n");
      out.write("            ");

                }
            
            
      out.write("\n");
      out.write("\n");
      out.write("                \n");
      out.write("            </tbody>\n");
      out.write("        </table>\n");
      out.write("            ");

                }
}
            
      out.write("\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
